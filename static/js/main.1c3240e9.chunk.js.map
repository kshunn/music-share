{"version":3,"sources":["components/Header.js","graphql/mutations.js","components/AddSong.js","graphql/subscriptions.js","components/SongList.js","components/QueuedSongList.js","graphql/queries.js","components/SongPlayer.js","reducer.js","App.js","theme.js","graphql/client.js","index.js"],"names":["useStyles","makeStyles","theme","title","marginLeft","spacing","Header","classes","AppBar","position","Toolbar","HeadsetTwoTone","Typography","className","variant","component","ADD_OR_REMOVE_FROM_QUEUE","gql","ADD_SONG","container","display","alignItems","urlInput","margin","addSongButton","dialog","textAlign","thumbnail","width","DEFAULT_SONG","duration","artist","AddSong","useMutation","addSong","error","React","useState","setDialog","url","setUrl","playable","setPlayable","song","setSong","handleChangeSong","event","target","name","value","prevSong","a","variables","length","handleCloseDialog","console","player","nestedPlayer","getVideoData","songData","getYoutubeInfo","getCurrentSound","getSoundcloudInfo","getDuration","video_id","author","Promise","resolve","Number","user","username","artwork_url","replace","handleError","field","graphQLErrors","extensions","path","includes","useEffect","isPlayable","SoundcloudPlayer","canPlay","YoutubePlayer","Dialog","open","onClose","DialogTitle","DialogContent","src","alt","TextField","onChange","label","fullWidth","helperText","DialogActions","Button","onClick","color","placeholder","type","InputProps","startAdornment","InputAdornment","Link","disabled","endIcon","AddBoxOutlined","hidden","onReady","GET_SONGS","songInfoContainer","songInfo","justifyContent","objectFit","height","Song","id","onCompleted","data","localStorage","setItem","JSON","stringify","addOrRemoveFromQueue","useContext","SongContext","state","dispatch","currentSongPlaying","setCurrentSongPlaying","isSongPlaying","isPlaying","Card","CardMedia","image","CardContent","gutterBottom","CardActions","IconButton","payload","size","Pause","PlayArrow","input","__typename","Save","SongList","useSubscription","loading","style","flexDirection","marginTop","CircularProgress","songs","map","key","avatar","text","textOverflow","overflow","gridAutoFlow","gridTemplateColumns","gridGap","whiteSpace","QueuedSong","Avatar","Delete","QueuedSongList","queue","useMediaQuery","breakpoints","up","i","GET_QUEUED_SONGS","details","padding","content","flex","controls","paddingLeft","paddingRight","playIcon","SongPlayer","useQuery","played","setPlayed","seeking","setSeeking","playedSeconds","setPlayedSeconds","positionInQueue","setPositionInQueue","reactPlayerRef","useRef","songIndex","findIndex","nextSong","SkipPrevious","SkipNext","Date","toISOString","substr","Slider","onMouseDown","onMouseUp","current","seekTo","newValue","min","max","step","ref","onProgress","playing","songReducer","action","createContext","App","initialSongState","useReducer","greaterThanSm","greaterThanMd","Provider","Hidden","only","Grid","paddingTop","item","xs","md","right","top","left","bottom","createMuiTheme","palette","primary","teal","secondary","purple","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","cache","InMemoryCache","typeDefs","resolvers","Mutation","_","queryResult","readQuery","query","newQueue","some","filter","writeQuery","Boolean","getItem","parse","writeData","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.1c3240e9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography, makeStyles } from '@material-ui/core';\r\nimport { HeadsetTwoTone } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    marginLeft: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction Header(){\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position='fixed' >\r\n      <Toolbar>\r\n        <HeadsetTwoTone />\r\n        <Typography className={classes.title} variant=\"h6\" component=\"h1\">\r\n          Apollo Music Share\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;","import { gql } from 'apollo-boost';\r\n\r\nexport const ADD_OR_REMOVE_FROM_QUEUE = gql`\r\n  mutation addOrRemoveFromQueue($input: SongInput!) {\r\n    addOrRemoveFromQueue(input: $input) @client\r\n  }\r\n`\r\n\r\nexport const ADD_SONG = gql`\r\n  mutation addSong($title: String!, $artist: String!, $thumbnail: String!, $duration: Float!, $url: String!) {\r\n    insert_songs(objects: {title: $title, artist: $artist, thumbnail: $thumbnail, duration: $duration, url: $url}) {\r\n      affected_rows\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport { TextField, InputAdornment, Button, Dialog, DialogTitle, DialogContent, DialogActions, makeStyles } from '@material-ui/core';\r\nimport { Link, AddBoxOutlined } from '@material-ui/icons';\r\nimport ReactPlayer from 'react-player';\r\nimport SoundcloudPlayer from 'react-player/lib/players/SoundCloud';\r\nimport YoutubePlayer from 'react-player/lib/players/YouTube';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { ADD_SONG } from '../graphql/mutations';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  urlInput: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  addSongButton: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  dialog: {\r\n    textAlign: 'center'\r\n  },\r\n  thumbnail: {\r\n    width: '90%'\r\n  }\r\n}));\r\n\r\nconst DEFAULT_SONG = {\r\n  duration: 0,\r\n  title: \"\",\r\n  artist: \"\",\r\n  thumbnail: \"\"\r\n}\r\n\r\nfunction AddSong(){\r\n  const [addSong, { error }] = useMutation(ADD_SONG);\r\n  const [dialog, setDialog] = React.useState(false);\r\n  const [url, setUrl] = React.useState('');\r\n  const [playable, setPlayable] = React.useState(false);\r\n  const [song, setSong] = React.useState(DEFAULT_SONG);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    const isPlayable = SoundcloudPlayer.canPlay(url) || YoutubePlayer.canPlay(url);\r\n    setPlayable(isPlayable);\r\n  }, [url]);\r\n\r\n  function handleChangeSong(event){\r\n    const { name, value } = event.target;\r\n    setSong(prevSong => ({\r\n      ...prevSong,\r\n      [name]: value\r\n    }))\r\n  }\r\n\r\n  async function handleAddSong(){\r\n    try{\r\n      const { url, thumbnail, duration, title, artist } = song;\r\n      await addSong({\r\n        variables: {\r\n          url: url.length > 0 ? url : null,\r\n          thumbnail: thumbnail.length > 0 ? thumbnail: null,\r\n          duration: duration > 0 ? duration: null,\r\n          title: title.length > 0 ? title: null,\r\n          artist: artist.length > 0 ? artist: null\r\n        }\r\n      })\r\n      handleCloseDialog();\r\n      setSong(DEFAULT_SONG);\r\n      setUrl('');\r\n    } catch(error) {\r\n      console.error(\"Error adding song\", error);\r\n    }\r\n    \r\n  }\r\n\r\n  function handleCloseDialog(){\r\n    setDialog(false);\r\n  }\r\n\r\n  async function handleEditSong({ player }){\r\n    const nestedPlayer = player.player.player;\r\n    let songData;\r\n    if(nestedPlayer.getVideoData){\r\n      songData = getYoutubeInfo(nestedPlayer);\r\n    } else if(nestedPlayer.getCurrentSound){\r\n      songData = await getSoundcloudInfo(nestedPlayer);\r\n    }\r\n    setSong({ ...songData, url });\r\n  }\r\n\r\n  function getYoutubeInfo(player){\r\n    const duration = player.getDuration();\r\n    const { title, video_id, author } = player.getVideoData();\r\n    const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`;\r\n    return {\r\n      duration,\r\n      title,\r\n      artist: author,\r\n      thumbnail\r\n    }\r\n  }\r\n\r\n  function getSoundcloudInfo(player) {\r\n    return new Promise(resolve => {\r\n      player.getCurrentSound(songData => {\r\n        if(songData){\r\n          resolve({\r\n            duration: Number(songData.duration/1000),\r\n            title: songData.title,\r\n            artist: songData.user.username,\r\n            thumbnail: songData.artwork_url.replace('-large', '-t500x500')\r\n          })\r\n        }\r\n      })\r\n    })\r\n    \r\n  }\r\n\r\n  function handleError(field) {\r\n    return error?.graphQLErrors[0]?.extensions?.path.includes(field);\r\n  }\r\n  const { thumbnail, title, artist } = song;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Dialog\r\n        className={classes.dialog}\r\n        open={dialog}\r\n        onClose={handleCloseDialog}\r\n      >\r\n        <DialogTitle>Edit Song</DialogTitle>\r\n        <DialogContent>\r\n          <img \r\n            src={thumbnail} \r\n            alt=\"Song thumbnail\" \r\n            className={classes.thumbnail}  \r\n          />\r\n          <TextField\r\n            value={title}\r\n            onChange={handleChangeSong}\r\n            margin=\"dense\"\r\n            name=\"title\"\r\n            label=\"Title\"\r\n            fullWidth\r\n            error={handleError('title')}\r\n            helperText={handleError('title') && 'Fill out field'}\r\n          />\r\n          <TextField\r\n            value={artist}\r\n            onChange={handleChangeSong}\r\n            margin=\"dense\"\r\n            name=\"artist\"\r\n            label=\"Artist\"\r\n            fullWidth\r\n            error={handleError('artist')}\r\n            helperText={handleError('artist') && 'Fill out field'}\r\n          />\r\n          <TextField\r\n            value={thumbnail}\r\n            onChange={handleChangeSong}\r\n            margin=\"dense\"\r\n            name=\"thumbnail\"\r\n            label=\"Thumbnail\"\r\n            fullWidth\r\n            error={handleError('thumbnail')}\r\n            helperText={handleError('thumbnail') && 'Fill out field'}\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"secondary\">Cancel</Button>\r\n          <Button onClick={handleAddSong} variant=\"outlined\" color=\"primary\">Add Song</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <TextField\r\n        className={classes.urlInput}\r\n        onChange={event => setUrl(event.target.value)}\r\n        value={url} \r\n        placeholder=\"Add Youtube or Soundcloud Url\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        type=\"url\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Link />\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n      />\r\n      <Button\r\n        disabled={!playable}\r\n        className={classes.addSongButton}\r\n        onClick={() => setDialog(true)}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        endIcon={<AddBoxOutlined />}\r\n      >\r\n        Add\r\n      </Button>\r\n      <ReactPlayer url={url} hidden onReady={handleEditSong} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddSong;","import { gql } from 'apollo-boost'\r\n\r\nexport const GET_SONGS = gql`\r\n  subscription getSongs {\r\n    songs(order_by: {created_at: desc}) {\r\n      artist\r\n      duration\r\n      id\r\n      thumbnail\r\n      title\r\n      url\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport { CircularProgress, Card, CardMedia, CardContent, Typography, CardActions, IconButton, makeStyles } from '@material-ui/core';\r\nimport { PlayArrow, Save, Pause } from '@material-ui/icons';\r\nimport { useSubscription, useMutation } from '@apollo/react-hooks';\r\nimport { GET_SONGS } from '../graphql/subscriptions';\r\nimport { SongContext } from '../App';\r\nimport { ADD_OR_REMOVE_FROM_QUEUE } from '../graphql/mutations';\r\n\r\nfunction SongList(){\r\n  const { data, loading, error } = useSubscription(GET_SONGS);\r\n\r\n\r\n  if(loading){\r\n    return (\r\n      <div style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginTop: 50\r\n      }}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n  if(error) return <div>Error fetching songs</div>\r\n  return (\r\n    <div>\r\n      {data.songs.map(song => (\r\n        <Song key={song.id} song={song} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  songInfoContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  songInfo: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n  thumbnail: {\r\n    objectFit: 'cover',\r\n    width: 140,\r\n    height: 140\r\n  }\r\n}));\r\n\r\nfunction Song({ song }) {\r\n  const { id } = song;\r\n  const classes = useStyles();\r\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\r\n    onCompleted: data => {\r\n      localStorage.setItem('queue', JSON.stringify(data.addOrRemoveFromQueue));\r\n    }\r\n  });\r\n  const { state, dispatch } = React.useContext(SongContext);\r\n  const { title, artist, thumbnail } = song;\r\n  const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const isSongPlaying = state.isPlaying && id === state.song.id;\r\n    setCurrentSongPlaying(isSongPlaying);\r\n  }, [id, state.song.id, state.isPlaying]);\r\n\r\n  function handleTogglePlay(){\r\n    dispatch({ type: \"SET_SONG\", payload: { song }});\r\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\r\n  }\r\n\r\n  function handleAddOrRemoveFromQueue(){\r\n    addOrRemoveFromQueue({\r\n      variables: { input: { ...song, __typename: 'Song' } }\r\n    });\r\n  }\r\n\r\n  return <Card className={classes.container}>\r\n    <div className={classes.songInfoContainer}>\r\n      <CardMedia className={classes.thumbnail} image={thumbnail} />\r\n      <div className={classes.songInfo}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body1\" component=\"p\" color=\"textSecondary\">\r\n            {artist}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <IconButton onClick={handleTogglePlay} size=\"small\" color=\"primary\">\r\n            {currentSongPlaying ? <Pause/> : <PlayArrow/>}\r\n          </IconButton>\r\n          <IconButton onClick={handleAddOrRemoveFromQueue} size=\"small\" color=\"secondary\">\r\n            <Save />\r\n          </IconButton>\r\n        </CardActions>\r\n      </div>\r\n    </div>\r\n  </Card>;\r\n}\r\n\r\nexport default SongList;","import React from 'react';\r\nimport { Typography, Avatar, IconButton, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { ADD_OR_REMOVE_FROM_QUEUE } from '../graphql/mutations';\r\n\r\nfunction QueuedSongList({ queue }){\r\n  const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up('md'));\r\n\r\n  return greaterThanMd && (\r\n    <div style={{\r\n      margin: '10px 0'\r\n    }}>\r\n      <Typography color=\"textSecondary\" variant=\"button\">\r\n        QUEUE ({queue.length})\r\n      </Typography>\r\n      {queue.map((song, i) => (\r\n        <QueuedSong key={i} song={song} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    width: 44,\r\n    height: 44,\r\n  },\r\n  text: {\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden'\r\n  },\r\n  container: {\r\n    display: 'grid',\r\n    gridAutoFlow: 'column',\r\n    gridTemplateColumns: '50px auto 50px',\r\n    gridGap: 12,\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  songInfoContainer: {\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n  }\r\n});\r\n\r\nfunction QueuedSong({ song }){\r\n  const { title, artist, thumbnail } = song;\r\n  const classes = useStyles();\r\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\r\n    onCompleted: data => {\r\n      localStorage.setItem('queue', JSON.stringify(data.addOrRemoveFromQueue));\r\n    }\r\n  });\r\n\r\n  function handleAddOrRemoveFromQueue(){\r\n    addOrRemoveFromQueue({\r\n      variables: { input: { ...song, __typename: 'Song' } }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Avatar className={classes.avatar} src={thumbnail} alt=\"Song thumbnail\" />\r\n      <div className={classes.songInfoContainer}>\r\n        <Typography className={classes.text} variant=\"subtitle2\">\r\n          {title}\r\n        </Typography>\r\n        <Typography className={classes.text} color=\"textSecondary\" variant=\"body2\">\r\n          {artist}\r\n        </Typography>\r\n      </div>\r\n      <IconButton onClick={handleAddOrRemoveFromQueue}>\r\n        <Delete color=\"error\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QueuedSongList;","import { gql } from 'apollo-boost'\r\n\r\nexport const GET_QUEUED_SONGS = gql`\r\n  query getQueuedSongs{\r\n    queue @client {\r\n      id\r\n      duration\r\n      title\r\n      artist\r\n      thumbnail\r\n      url\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport QueuedSongList from './QueuedSongList';\r\nimport { Card, CardContent, Typography, IconButton, Slider, CardMedia, makeStyles } from '@material-ui/core';\r\nimport { SkipPrevious, PlayArrow, SkipNext, Pause } from '@material-ui/icons';\r\nimport { SongContext } from '../App';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { GET_QUEUED_SONGS } from '../graphql/queries';\r\nimport ReactPlayer from 'react-player';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '0px 15px'\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  thumbnail: {\r\n    width: 150\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38\r\n  }\r\n}));\r\n\r\nfunction SongPlayer(){\r\n  const { data } = useQuery(GET_QUEUED_SONGS);\r\n  const { state, dispatch } = React.useContext(SongContext);\r\n  const [played, setPlayed] = React.useState(0);\r\n  const [seeking, setSeeking] = React.useState(false);\r\n  const [playedSeconds, setPlayedSeconds] = React.useState(0);\r\n  const [positionInQueue, setPositionInQueue] = React.useState(0);\r\n  const reactPlayerRef = React.useRef();\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    const songIndex = data.queue.findIndex(song => song.id === state.song.id);\r\n    setPositionInQueue(songIndex);\r\n  }, [data.queue, state.song.id]);\r\n\r\n  React.useEffect(() => {\r\n    const nextSong = data.queue[positionInQueue + 1];\r\n    if(nextSong && played >= .99){\r\n      setPlayed(0);\r\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\r\n    }\r\n  }, [data.queue, played, dispatch, positionInQueue]);\r\n\r\n  function handleTogglePlay(){\r\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\r\n  }\r\n  function handleProgressChange(event, newValue){\r\n    setPlayed(newValue);\r\n  }\r\n  function handleSeekMouseDown(){\r\n    setSeeking(true);\r\n  }\r\n  function handleSeekMouseUp(){\r\n    setSeeking(false);\r\n    reactPlayerRef.current.seekTo(played);\r\n  }\r\n  function handlePlayNextSong(){\r\n    const nextSong = data.queue[positionInQueue + 1];\r\n    if(nextSong){\r\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\r\n    }\r\n  }\r\n  function handlePlayPrevSong(){\r\n    const prevSong = data.queue[positionInQueue - 1];\r\n    if(prevSong){\r\n      dispatch({ type: \"SET_SONG\", payload: { song: prevSong } });\r\n    }\r\n  }\r\n  function formatDuration(seconds){\r\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.container} variant=\"outlined\">\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography variant=\"h5\" component=\"h3\">\r\n              {state.song.title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\r\n              {state.song.artist}\r\n            </Typography>\r\n          </CardContent>\r\n          <div className={classes.controls}>\r\n            <IconButton onClick={handlePlayPrevSong}>\r\n              <SkipPrevious />\r\n            </IconButton>\r\n            <IconButton onClick={handleTogglePlay}>\r\n              {state.isPlaying ? <Pause className={classes.playIcon}/> : <PlayArrow className={classes.playIcon}/>}\r\n            </IconButton>\r\n            <IconButton onClick={handlePlayNextSong}>\r\n              <SkipNext />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\r\n              {formatDuration(playedSeconds)}\r\n            </Typography>\r\n          </div>\r\n          <Slider\r\n            onMouseDown={handleSeekMouseDown}\r\n            onMouseUp={handleSeekMouseUp}\r\n            onChange={handleProgressChange} \r\n            type=\"range\"\r\n            min={0}\r\n            max={1}\r\n            step={0.01}\r\n            value={played}\r\n          />\r\n        </div>\r\n        <ReactPlayer\r\n          ref={reactPlayerRef}\r\n          onProgress={({ played, playedSeconds }) => {\r\n            if(!seeking){\r\n              setPlayed(played);\r\n              setPlayedSeconds(playedSeconds)\r\n            }\r\n          }}\r\n          url={state.song.url} playing={state.isPlaying} hidden />\r\n        <CardMedia\r\n          className={classes.thumbnail}\r\n          image={state.song.thumbnail}\r\n        />\r\n      </Card>\r\n      <QueuedSongList queue={data.queue}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SongPlayer;","function songReducer(state, action) {\r\n  switch(action.type){\r\n    case \"PLAY_SONG\": {\r\n      return {\r\n        ...state,\r\n        isPlaying: true\r\n      };\r\n    }\r\n    case \"PAUSE_SONG\": {\r\n      return {\r\n        ...state,\r\n        isPlaying: false\r\n      };\r\n    }\r\n    case \"SET_SONG\": {\r\n      return {\r\n        ...state,\r\n        song: action.payload.song\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default songReducer;","import React from 'react';\nimport Header from './components/Header';\nimport AddSong from './components/AddSong';\nimport SongList from './components/SongList';\nimport SongPlayer from './components/SongPlayer';\nimport { Grid, useMediaQuery, Hidden } from '@material-ui/core';\nimport songReducer from './reducer';\n\nexport const SongContext = React.createContext({\n  song: {\n    id: '04832f6d-382b-42dc-8bac-1cd3e03af42e',\n    title: 'Petal Fortune',\n    artist: 'PERC%NT',\n    thumbnail: 'http://img.youtube.com/vi/NaYS4eKYhjc/0.jpg',\n    url: 'https://www.youtube.com/watch?v=NaYS4eKYhjc',\n    duration: 230\n  },\n  isPlaying: false\n})\n\nfunction App() {\n  const initialSongState = React.useContext(SongContext);\n  const [state, dispatch] = React.useReducer(songReducer, initialSongState);\n  const greaterThanSm = useMediaQuery(theme => theme.breakpoints.up('sm'));\n  const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up('md'));\n  return (\n    <SongContext.Provider value={{ state, dispatch }}>\n      {/* {greaterThanSm && <Header />} */}\n      <Hidden only=\"xs\">\n        <Header />\n      </Hidden>\n      <Grid container spacing={3}>\n        <Grid\n          style={{\n            paddingTop: greaterThanSm ? 80 : 10\n          }} \n          item \n          xs={12} \n          md={7}\n        >\n          <AddSong />\n          <SongList />\n        </Grid>\n        <Grid \n          style={\n            greaterThanMd ? {\n            position: 'fixed',\n            width: '100%',\n            right: 0,\n            top: 70\n          } : {\n            position: 'fixed',\n            width: '100%',\n            left: 0,\n            bottom: 0\n          }}\n          item xs={12} md={5}\n        >\n          <SongPlayer />\n        </Grid>\n      </Grid>\n    </SongContext.Provider>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { teal, purple } from '@material-ui/core/colors';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: teal,\r\n    secondary: purple\r\n  }\r\n});\r\n\r\nexport default theme;","// import ApolloClient from 'apollo-boost';\r\n\r\n// const client = new ApolloClient({\r\n//   uri: 'https://music-sharee.herokuapp.com/v1/graphql'\r\n// });\r\n\r\n// export default client;\r\n\r\nimport ApolloClient from 'apollo-client';\r\nimport { WebSocketLink } from 'apollo-link-ws';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { gql } from 'apollo-boost';\r\nimport { GET_QUEUED_SONGS } from './queries';\r\n\r\nconst client = new ApolloClient({\r\n  link: new WebSocketLink({\r\n    uri: 'wss://music-sharee.herokuapp.com/v1/graphql',\r\n    options: {\r\n      reconnect: true\r\n    }\r\n  }),\r\n  cache: new InMemoryCache(),\r\n  typeDefs: gql`\r\n    type Song {\r\n      id: uuid!\r\n      title: String!\r\n      artist: String!\r\n      thumbnail: String!\r\n      duration: Float!\r\n      url: String!\r\n    }\r\n\r\n    input SongInput {\r\n      id: uuid!\r\n      title: String!\r\n      artist: String!\r\n      thumbnail: String!\r\n      duration: Float!\r\n      url: String!\r\n    }\r\n\r\n    type Query {\r\n      queue: [Song]!\r\n    }\r\n\r\n    type Mutation {\r\n      addOrRemoveFromQueue(input: SongInput!): [Song]!\r\n    }\r\n  `,\r\n  resolvers: {\r\n    Mutation: {\r\n      addOrRemoveFromQueue: (_, { input }, { cache }) => {\r\n        const queryResult = cache.readQuery({\r\n          query: GET_QUEUED_SONGS\r\n        })\r\n        if(queryResult){\r\n          const { queue } = queryResult;\r\n          const isInQueue = queue.some(song => song.id === input.id);\r\n          const newQueue = isInQueue ? queue.filter(song => song.id !== input.id) : [...queue, input];\r\n          cache.writeQuery({\r\n            query: GET_QUEUED_SONGS,\r\n            data: { queue: newQueue }\r\n          });\r\n          return newQueue;\r\n        }\r\n        return [];\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst hasQueue = Boolean(localStorage.getItem('queue'));\r\n\r\nconst data = {\r\n  queue: hasQueue ? JSON.parse(localStorage.getItem('queue')) : []\r\n};\r\n\r\nclient.writeData({ data });\r\n\r\nexport default client;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport theme from './theme';\nimport client from './graphql/client';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </MuiThemeProvider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}